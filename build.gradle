apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'codenarc'

defaultTasks 'libs'
sourceSets {
    jobs {
        groovy {
            srcDir "platform/jobs"
            srcDir "sample/jobs"
        }
    }
    src {
        groovy {
            srcDir "src/main/groovy"
        }
    }
    test {
        groovy {
            srcDir "src/test/groovy"
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
}

configurations {
    libs
    testPlugins {}
}

dependencies {

    jobsCompile 'org.yaml:snakeyaml:1.17'
    jobsCompile 'org.codehaus.groovy:groovy:2.1.3'
    jobsCompile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

    libs 'org.yaml:snakeyaml:1.17'
    compile 'org.yaml:snakeyaml:1.17'

    compile 'org.codehaus.groovy:groovy:2.1.3'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }

    // for the RestApiScriptRunner
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
        exclude(module: 'groovy')
    }

    // for the RestApiScriptRunner and XmlOutputRunner
    compile('ant:ant:1.7.0')

    compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

    testCompile 'cglib:cglib:3.1' 

    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.8'
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}:war-for-test@jar"

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.1@jar'
    testCompile 'org.jenkins-ci.plugins:cloudbees-folder:4.4@jar'

    // plugins to install in test instance
    testPlugins 'org.jenkins-ci.plugins:ghprb:1.31.4'
    testPlugins 'com.coravy.hudson.plugins.github:github:1.19.0'

}


codenarc {
    toolVersion = '0.25.2'
    configFile = file('config/codenarc/codenarcRules.groovy')
    maxPriority2Violations = 49
    maxPriority3Violations = 99
}



task libs(type: Copy) {
    into 'lib'
    from configurations.libs
}

task cleanLibs(type: Delete) {
    delete 'lib'
}

tasks.getByName('test').inputs.files(sourceSets.jobs.groovy.srcDirs)

task rest(dependsOn: 'classes', type: JavaExec) {
    main = 'org.edx.jenkins.dsl.rest.RestApiScriptRunner'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}

task debugXml(dependsOn: 'classes', type: JavaExec) {
    main = 'org.edx.jenkins.dsl.debug.XmlOutputRunner'
    classpath = sourceSets.main.runtimeClasspath
    classpath += sourceSets.main.compileClasspath
    systemProperties System.getProperties()
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

// run tests on jobs
// generate xml
// build
task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
