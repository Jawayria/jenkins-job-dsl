
import groovy.io.FileType

import javaposse.jobdsl.dsl.DslScriptLoader
import javaposse.jobdsl.dsl.JobManagement
import javaposse.jobdsl.plugin.JenkinsJobManagement
import javaposse.jobdsl.dsl.Job
import javaposse.jobdsl.dsl.GeneratedItems
import javaposse.jobdsl.dsl.GeneratedJob
import org.junit.ClassRule
import org.jvnet.hudson.test.JenkinsRule
import spock.lang.Shared
import spock.lang.Specification
import spock.lang.Unroll
import spock.lang.MockingApi
//import hudson.EnvVars
//import hudson.model.AbstractBuild
//import hudson.model.AbstractProject
//import hudson.model.AbstractCIBase
//import hudson.model.Hudson
//import java.io.PrintStream
//import hudson.model.Build
//import hudson.model.FreeStyleProject
/**
 * Tests that all dsl scripts in the jobs directory will compile.
 */
class JobScriptsSpec extends Specification {

    @Shared
    @ClassRule
    JenkinsRule jenkinsRule = new JenkinsRule()

    @Unroll
    void 'test no exceptions thrown running #file.name'(File file) {
        given:
        JobManagement jm = new JenkinsJobManagement(System.out, [:], new File('.'))
        DslScriptLoader loader = new DslScriptLoader(jm)

        when:
        loader.runScript(file.text)

        then:
        noExceptionThrown()

        where:
        file << jobFiles
    }
    
    @Unroll
    void 'test name of job generated by #file.name'(File file) {
        given:
        JobManagement jm = new JenkinsJobManagement(System.out, [:], new File('.'))
        DslScriptLoader loader = new DslScriptLoader(jm)

        when:
        GeneratedItems generatedItems = loader.runScript(file.text)
        //GeneratedJob job = generatedItems.jobs

        then:
        generatedItems.jobs.contains(GeneratedJob('SampleJenkinsJob'))
        //'x' ==  generatedItems.jobs.getClass()
        //GeneratedJob('', 'SampleJenkinsJob') in generatedItems.jobs

        where:
        file << jobFiles
    }

    @Unroll
    void 'test particular content within job gen from #file.name'(File file) {
        given:
        JobManagement jm = new JenkinsJobManagement(System.out, [:], new File('.'))
        DslScriptLoader loader = new DslScriptLoader(jm)

        when:
        GeneratedItems generatedItems = loader.runScript(file.text)
        String config = jm.getConfig('SampleJenkinsJob')

        then:
        config.contains('hello world')
        noExceptionThrown()

        where:
        file << jobFiles
    }

    static List<File> getJobFiles() {
        List<File> files = []
        new File('sample/jobs').eachFileRecurse(FileType.FILES) {
            if (it.name.endsWith('.groovy')) {
                files << it
            }
        }
        files
    }



}

